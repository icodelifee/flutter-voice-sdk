{
    "sourceFile": "lib/view/screen/login_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722295310467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722295805226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,9 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n+        Provider.of<MainViewModel>(context, listen: true).observeResponses();\n     Provider.of<MainViewModel>(context, listen: true).observeResponses();\n \n     bool registered =\n         Provider.of<MainViewModel>(context, listen: true).registered;\n"
                },
                {
                    "date": 1722295848793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n   }\n \n   Future<void> _attemptLogin() async {\n     String? token;\n+    Provider.of<MainViewModel>(context, listen: true).connect();\n     if (defaultTargetPlatform == TargetPlatform.android) {\n       token = (await FirebaseMessaging.instance.getToken())!;\n       logger.i(\"Android notification token :: $token\");\n     } else if (defaultTargetPlatform == TargetPlatform.iOS) {\n@@ -91,10 +92,10 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n+    \n     Provider.of<MainViewModel>(context, listen: true).observeResponses();\n-    Provider.of<MainViewModel>(context, listen: true).observeResponses();\n \n     bool registered =\n         Provider.of<MainViewModel>(context, listen: true).registered;\n     if (registered) {\n"
                },
                {
                    "date": 1722295883541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n     logger.i(\"Version ${Platform.operatingSystemVersion}\");\n \n     sipUserController.text = \"isaac33882\";\n     sipPasswordController.text = \"Iamtooold\";\n+    Provider.of<MainViewModel>(context, listen: true).connect();\n \n     super.initState();\n   }\n \n@@ -51,10 +52,9 @@\n     print(statuses[Permission.bluetooth]);\n   }\n \n   Future<void> _attemptLogin() async {\n-    String? token;\n-    Provider.of<MainViewModel>(context, listen: true).connect();\n+    String? token;''\n     if (defaultTargetPlatform == TargetPlatform.android) {\n       token = (await FirebaseMessaging.instance.getToken())!;\n       logger.i(\"Android notification token :: $token\");\n     } else if (defaultTargetPlatform == TargetPlatform.iOS) {\n@@ -92,8 +92,9 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n+    \n     Provider.of<MainViewModel>(context, listen: true).observeResponses();\n \n     bool registered =\n         Provider.of<MainViewModel>(context, listen: true).registered;\n"
                }
            ],
            "date": 1722295310467,
            "name": "Commit-0",
            "content": "// ignore: avoid_web_libraries_in_flutter\nimport 'dart:io';\n\nimport 'package:firebase_messaging/firebase_messaging.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_callkit_incoming/flutter_callkit_incoming.dart';\nimport 'package:telnyx_flutter_webrtc/main.dart';\nimport 'package:telnyx_flutter_webrtc/main_view_model.dart';\nimport 'package:provider/provider.dart';\nimport 'package:logger/logger.dart';\nimport 'package:permission_handler/permission_handler.dart';\nimport 'package:telnyx_webrtc/config/telnyx_config.dart';\nimport 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb;\n\nclass LoginScreen extends StatefulWidget {\n  const LoginScreen({Key? key, required this.title}) : super(key: key);\n  final String title;\n\n  @override\n  State<LoginScreen> createState() => _LoginScreenState();\n}\n\nclass _LoginScreenState extends State<LoginScreen> with WidgetsBindingObserver {\n  final logger = Logger();\n  TextEditingController sipUserController = TextEditingController();\n  TextEditingController sipPasswordController = TextEditingController();\n  TextEditingController sipNameController = TextEditingController();\n  TextEditingController sipNumberController = TextEditingController();\n\n  @override\n  initState() {\n    if (!kIsWeb) {\n      _checkPermissions();\n    }\n    logger.i(\"Version ${Platform.operatingSystemVersion}\");\n\n    sipUserController.text = \"isaac33882\";\n    sipPasswordController.text = \"Iamtooold\";\n\n    super.initState();\n  }\n\n  Future<void> _checkPermissions() async {\n    Map<Permission, PermissionStatus> statuses = await [\n      Permission.audio,\n      Permission.microphone,\n      Permission.bluetooth,\n      Permission.bluetoothConnect\n    ].request();\n    print(statuses[Permission.microphone]);\n    print(statuses[Permission.bluetooth]);\n  }\n\n  Future<void> _attemptLogin() async {\n    String? token;\n    if (defaultTargetPlatform == TargetPlatform.android) {\n      token = (await FirebaseMessaging.instance.getToken())!;\n      logger.i(\"Android notification token :: $token\");\n    } else if (defaultTargetPlatform == TargetPlatform.iOS) {\n      token = await FlutterCallkitIncoming.getDevicePushTokenVoIP();\n      logger.i(\"iOS notification token :: $token\");\n    }\n    setState(() {\n      var credentialConfig = CredentialConfig(\n          sipUserController.text,\n          sipPasswordController.text,\n          sipNameController.text,\n          sipNumberController.text,\n          token,\n          true,\n          \"assets/audio/incoming_call.mp3\",\n          \"assets/audio/ringback_tone.mp3\");\n\n      var tokenConfig = TokenConfig(\n          \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ0ZWxueXhfdGVsZXBob255IiwiZXhwIjoxNzA5NjM0Mzk4LCJpYXQiOjE3MDk1NDc5OTgsImlzcyI6InRlbG55eF90ZWxlcGhvbnkiLCJqdGkiOiIzOWY3ZDY2ZS0xY2JiLTQ2Y2QtOGM4ZS03NDJlOWZlYTUwNDAiLCJuYmYiOjE3MDk1NDc5OTcsInN1YiI6Ijg2YmEyZjA3LWU4NmEtNGU3NS05MTg2LTAwOTYxYWMzNDc0ZSIsInRlbF90b2tlbiI6Ik5iVldCTFFySDRoWk9TS2FGa0ZfMlctcndWcklJbExJcnltZkRFY0RETThydFk0ZUp6TkhmTVlaeWJyNVk2b0tTd2Exa0toZzZrREdDNHd4dUVSTDlodUdqOV9nRk5oVjZwVzRSWFB0dGFWMF9fNXhoVVRHb3F5czdmX0FsVUotZjZzNEktQXNMcm9vc3djNW13SEE3VmdHIiwidHlwIjoiYWNjZXNzIn0.8Y_MdGid2iZg0ERLJxQEbR2R5JRkg6kS_g0P4v5qFEvLWw4MIfEoUXMxyvSEvPd4t3ySS7xeB2_NFCB02kEDVg\",\n          sipNameController.text,\n          sipNumberController.text,\n          token,\n          true,\n          \"\",\n          \"\");\n      Provider.of<MainViewModel>(context, listen: false)\n          .login(credentialConfig);\n    });\n  }\n\n  @override\n  void didChangeAppLifecycleState(AppLifecycleState state) {\n    super.didChangeAppLifecycleState(state);\n    if (state == AppLifecycleState.resumed) {}\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Provider.of<MainViewModel>(context, listen: true).observeResponses();\n\n    bool registered =\n        Provider.of<MainViewModel>(context, listen: true).registered;\n    if (registered) {\n      WidgetsBinding.instance.addPostFrameCallback((_) {\n        Navigator.pushReplacementNamed(context, '/home');\n      });\n    }\n    return Scaffold(\n      appBar: AppBar(\n        title: Text(widget.title),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: TextFormField(\n                controller: sipUserController,\n                decoration: const InputDecoration(\n                  border: OutlineInputBorder(),\n                  labelText: 'SIP Username',\n                ),\n              ),\n            ),\n            Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: TextFormField(\n                controller: sipPasswordController,\n                obscureText: true,\n                decoration: const InputDecoration(\n                  border: OutlineInputBorder(),\n                  labelText: 'SIP Password',\n                ),\n              ),\n            ),\n            Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: TextFormField(\n                controller: sipNameController,\n                decoration: const InputDecoration(\n                  border: OutlineInputBorder(),\n                  labelText: 'Caller ID Name',\n                ),\n              ),\n            ),\n            Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: TextFormField(\n                controller: sipNumberController,\n                decoration: const InputDecoration(\n                  border: OutlineInputBorder(),\n                  labelText: 'Caller ID Number',\n                ),\n              ),\n            ),\n            Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: TextButton(\n                style: TextButton.styleFrom(\n                  foregroundColor: Colors.blue,\n                ),\n                onPressed: () {\n                  _attemptLogin();\n                },\n                child: const Text('Login'),\n              ),\n            )\n          ],\n        ),\n      ),\n    );\n  }\n\n  void _showToast(BuildContext context, String text) {\n    final scaffold = ScaffoldMessenger.of(context);\n    scaffold.showSnackBar(\n      SnackBar(\n        content: Text('$text'),\n        action: SnackBarAction(\n            label: 'OKAY', onPressed: scaffold.hideCurrentSnackBar),\n      ),\n    );\n  }\n}\n"
        }
    ]
}