{
    "sourceFile": "lib/view/screen/call_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1722388093571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1722388093571,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:logger/logger.dart';\nimport 'package:provider/provider.dart';\nimport 'package:telnyx_flutter_webrtc/main_view_model.dart';\nimport 'package:telnyx_flutter_webrtc/view/widgets/dialpad_widget.dart';\nimport 'package:telnyx_webrtc/call.dart';\n\nclass CallScreen extends StatefulWidget {\n  const CallScreen({Key? key, required this.title, this.call})\n      : super(key: key);\n  final String title;\n  final Call? call;\n\n  @override\n  State<CallScreen> createState() => _CallScreenState();\n}\n\nclass _CallScreenState extends State<CallScreen> {\n  final logger = Logger();\n  TextEditingController callInputController = TextEditingController();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text(widget.title),\n      ),\n      body: SingleChildScrollView( child : Center(\n          child: Column(\n        children: [\n          const SizedBox(height: 16),\n          Text(widget.call?.sessionDestinationNumber ?? \"Unknown Caller\"),\n          const SizedBox(height: 8),\n          DialPad(\n            backspaceButtonIconColor: Colors.red,\n            dialButtonColor: Colors.red,\n            makeCall: (number) {\n              //End call\n              Provider.of<MainViewModel>(context, listen: false).endCall(endfromCallScreen: true);\n            },\n            keyPressed: (number) {\n              callInputController.text =\n                  callInputController.value.text + number;\n              Provider.of<MainViewModel>(context, listen: false).dtmf(number);\n            },\n          ),\n          const SizedBox(height: 8),\n          Row(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\n            IconButton(\n                onPressed: () {\n                  print(\"mic\");\n                  Provider.of<MainViewModel>(context, listen: false)\n                      .muteUnmute();\n                },\n                icon: const Icon(Icons.mic)),\n            IconButton(\n                onPressed: () {\n                  print(\"speakerphone\");\n                  Provider.of<MainViewModel>(context, listen: false)\n                      .toggleSpeakerPhone();\n                },\n                icon: const Icon(Icons.volume_up)),\n            IconButton(\n                onPressed: () {\n                  print(\"pause\");\n                  Provider.of<MainViewModel>(context, listen: false)\n                      .holdUnhold();\n                },\n                icon: const Icon(Icons.pause))\n          ])\n        ],\n      ))),\n    );\n  }\n}\n"
        }
    ]
}