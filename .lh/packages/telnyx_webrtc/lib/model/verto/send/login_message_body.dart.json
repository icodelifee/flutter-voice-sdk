{
    "sourceFile": "packages/telnyx_webrtc/lib/model/verto/send/login_message_body.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1722377095186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1722377095186,
            "name": "Commit-0",
            "content": "import 'package:flutter/foundation.dart';\n\nclass LoginMessage {\n  String? id;\n  String? jsonrpc;\n  String? method;\n  LoginParams? params;\n\n  LoginMessage({this.id, this.jsonrpc, this.method, this.params});\n\n  LoginMessage.fromJson(Map<String, dynamic> json) {\n    id = json['id'];\n    jsonrpc = json['jsonrpc'];\n    method = json['method'];\n    params =\n        json['params'] != null ? LoginParams.fromJson(json['params']) : null;\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = <String, dynamic>{};\n    data['id'] = id;\n    data['jsonrpc'] = jsonrpc;\n    data['method'] = method;\n    if (params != null) {\n      data['params'] = params!.toJson();\n    }\n    return data;\n  }\n}\n\nclass LoginParams {\n  String? login;\n  String? loginToken;\n  List<String>? loginParams;\n  String? passwd;\n  UserVariables? userVariables;\n  String? sessionId;\n  String? attachCall = \"true\";\n  LoginParams(\n      {this.login,\n      this.loginToken,\n      this.loginParams,\n      this.passwd,\n      this.userVariables,\n      this.sessionId,\n      this.attachCall});\n\n  LoginParams.fromJson(Map<String, dynamic> json) {\n    login = json['login'];\n    loginToken = json['login_token'];\n    attachCall = \"true\";\n    if (json['loginParams'] != null) {\n      loginParams = <String>[];\n      json['loginParams'].forEach((v) {\n        loginParams!.add((v));\n      });\n    }\n    passwd = json['passwd'];\n    sessionId = json['sessid'];\n    userVariables = json['userVariables'] != null\n        ? UserVariables.fromJson(json['userVariables'])\n        : null;\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = <String, dynamic>{};\n    data['login'] = login;\n    if (loginToken != null) {\n      data['login_token'] = loginToken;\n    }\n    if (loginParams != null) {\n      data['loginParams'] = loginParams!.map((v) => v).toList();\n    }\n    data['passwd'] = passwd;\n    data['sessid'] = sessionId;\n    data['attachCall'] = attachCall;\n    if (userVariables != null) {\n      data['userVariables'] = userVariables!.toJson();\n    }\n    return data;\n  }\n}\n\nclass UserVariables {\n  String? pushDeviceToken;\n  String? pushNotificationProvider;\n\n  UserVariables({this.pushDeviceToken, this.pushNotificationProvider});\n\n  UserVariables.fromJson(Map<String, dynamic> json) {\n    pushDeviceToken = json['push_device_token'];\n    pushNotificationProvider = json['push_notification_provider'];\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = <String, dynamic>{};\n    data['push_device_token'] = pushDeviceToken;\n    data['push_notification_provider'] = pushNotificationProvider;\n    String pushEnvironment = kDebugMode ? \"debug\" : \"production\";\n    data['push_notification_environment'] = pushEnvironment;\n    print(\"pushEnvironment: $pushEnvironment\");\n    return data;\n  }\n}\n"
        }
    ]
}